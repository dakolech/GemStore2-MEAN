// Generated by CoffeeScript 1.7.1
var api, app, bodyParser, busboy, env, errorHandler, express, http, methodOverride, mongoose, morgan, path, routes;

express = require('express');

bodyParser = require('body-parser');

methodOverride = require('method-override');

errorHandler = require('error-handler');

morgan = require('morgan');

routes = require('./routes');

api = require('./routes/api');

http = require('http');

path = require('path');

mongoose = require('mongoose');

busboy = require('connect-busboy');

app = module.exports = express();

mongoose.connect('mongodb://dakolech:dako222@novus.modulusmongo.net:27017/po5Vymyq');

app.set('port', process.env.PORT || 3000);

app.set('views', __dirname + '/views');

app.set('view engine', 'jade');

app.use(morgan('dev'));

app.use(busboy());

app.use(bodyParser.json());

app.use(bodyParser.urlencoded({
  extended: true
}));

app.use(methodOverride());

app.use(express["static"](path.join(__dirname, 'public')));

env = process.env.NODE_ENV || 'development';

if (app.get('env') === 'development') {
  app.locals.pretty = true;
}

app.get('/', routes.index);

app.get('/admin', routes.admin);

app.get('/partials/:name', routes.partials);

app.get('/partials/admin/:name', routes.partialsAdmin);

app.get('/partials/templates/:name', routes.templates);

app.get('/api/name', api.name);

app.get('/api/products', api.products);

app.get('/api/product/:id', api.product);

app["delete"]('/api/product/:id', api.deleteProduct);

app.post('/api/product', api.addProduct);

app.post('/api/product/:id', api.editProduct);

app.post('/api/product/review/:id', api.addReviewToProduct);

app.get('/api/products/:category', api.productsCategory);

app.get('/api/categories', api.categories);

app.post('/api/category', api.addCategory);

app.get('/api/category/:id', api.category);

app.post('/api/category/:id/:oldname', api.editCategory);

app["delete"]('/api/category/:id/:name', api.deleteCategory);

app.get('/api/product/image/:file', api.image);

app.post('/api/productImage/:id', api.AddImage);

app["delete"]('/api/productImage/:id/:name', api.deleteImage);

app.get('/api/sites', api.sites);

app.get('/api/site/:title', api.site);

app.post('/api/site', api.addSite);

app["delete"]('/api/site/:id', api.deleteSite);

app.get('*', routes.index);

http.createServer(app).listen(app.get('port'), function() {
  return console.log('Express server listening on port ' + app.get('port'));
});
