// Generated by CoffeeScript 1.7.1
'use strict';
angular.module('myApp.directives', []).directive('appVersion', function(version) {
  return function(scope, elm, attrs) {
    elm.text(version);
  };
}).directive('productTitle', function() {
  return {
    restrict: 'A',
    templateUrl: 'partials/templates/product-title'
  };
}).directive('adminSettings', function() {
  return {
    restrict: 'A',
    templateUrl: 'partials/admin/settings'
  };
}).directive('adminSites', function() {
  return {
    restrict: 'A',
    templateUrl: 'partials/admin/sites'
  };
}).directive('adminCategories', function() {
  return {
    restrict: 'A',
    templateUrl: 'partials/admin/categories'
  };
}).directive('adminProducts', function() {
  return {
    restrict: 'A',
    templateUrl: 'partials/admin/products'
  };
}).directive('productPanels', function() {
  return {
    restrict: 'A',
    templateUrl: 'partials/templates/product-panels',
    controller: function() {
      this.tab = 1;
      this.selectTab = function(setTab) {
        return this.tab = setTab;
      };
      return this.isSelected = function(checkTab) {
        return this.tab === checkTab;
      };
    },
    controllerAs: 'panels'
  };
}).directive("productGallery", function() {
  return {
    restrict: "A",
    templateUrl: "partials/templates/product-gallery",
    controller: function() {
      this.current = 0;
      this.setCurrent = function(imageNumber) {
        this.current = imageNumber || 0;
      };
    },
    controllerAs: "gallery"
  };
}).directive("scroll", function($window) {
  return function(scope, element, attrs) {
    return angular.element($window).bind("scroll", function() {
      if (this.pageYOffset >= 100) {
        scope.boolChangeClass = true;
        console.log('Scrolled below header.');
      } else {
        scope.boolChangeClass = false;
        console.log('Header is in view.');
      }
      return scope.$apply();
    });
  };
});
